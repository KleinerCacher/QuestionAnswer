@using Hbs.Web.QuestionAnswer.Common
@model Hbs.Web.QuestionAnswer.ViewModels.QuestionViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h2>@Html.DisplayFor(model => model.Title)</h2>
    @Html.ActionLink("Zurück zur Liste", "Index")
    <br />
    <h3>Frage</h3>
    <div class="word-wrap">
        <div class="moderationtext">
            <text>@UserHelper.GetUserDisplayname(Model.Author)</text>
            - Erstellt: @Html.DisplayFor(model => model.CreationDate)
            @{if (Model.ModifiedDate != null)
                {
                    <text>- Bearbeitet: @Html.DisplayFor(model => model.ModifiedDate) </text>
                }
            }
            - @Html.ActionLink("Frage bearbeiten", "Edit", new { id = Model.Id })
        </div>
        @Html.Raw(Model.Text)
    </div>

    @Html.HiddenFor(model => model.Author)
                @Html.HiddenFor(model => model.CreationDate)
                @Html.HiddenFor(model => model.Title)
                @Html.HiddenFor(model => model.Text)

                <hr />
                <div>
                    <h3>Antworten</h3>
                    @foreach (var answer in Model.Answers)
                    {
                        <div class="@(answer.IsCorrectAnswer ? "answer-correct":"")">
                            <div class="moderationtext">
                                <text>@UserHelper.GetUserDisplayname(answer.Author)</text>
                                - <text>
                                    Erstellt: @answer.CreationDate.ToString("dd.MM.yyyy")
                                    @{if (answer.ModifiedDate != null)
                                        {
                                            <text>- Bearbeitet: @answer.ModifiedDate.Value.ToString("dd.MM.yyyy") </text>
                                        }
                                    }
                                    - @Html.ActionLink("Antwort bearbeiten", "Edit", "Answers", new { id = answer.Id }, null)
                                    @{if (!answer.IsCorrectAnswer && !Model.IsAnswered)
                                        {                                            
                                           <text>- </text> @Html.ActionLink("Als Lösung markieren", "MarkAsCorrectAnswer", new { id = answer.Id, isCorrect = true }, null);
                                        }
                                        else if (answer.IsCorrectAnswer)
                                        {
                                           <text>- </text> @Html.ActionLink("Lösungsmarkierung entfernen", "MarkAsCorrectAnswer", new { id = answer.Id, isCorrect = false }, null);}}
                                    <br />
                            </div>
                            <div class="word-wrap">
                                @Html.Raw(answer.Text)
                            </div>
                        </div>
                        <hr />
                                        }

                    <div class="form-horizontal">
                        <h4>Neue Antwort</h4>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <div class="col-lg-12">
                                @Html.EditorFor(model => model.NewAnswerText, new { htmlAttributes = new { @class = "form-control question-answer-textarea", @row = 6 } })
                                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-lg-2">
                                <input type="submit" value="Antwort erstellen" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
                                        }
